import React, { useState } from 'react';
import axios from 'axios';
import { toast } from 'react-toastify';

interface SellerData {
  email: string;
  password: string;
  storeName: string;
}

const SellerSignIn: React.FC = () => {
  const [sellerData, setSellerData] = useState<SellerData>({
    email: '',
    password: '',
    storeName: '',
  });

  const [isLoading, setIsLoading] = useState<boolean>(false);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setSellerData({
      ...sellerData,
      [name]: value,
    });
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      const response = await axios.post('http://localhost:3000/api/v1/sellers/signin', sellerData, {
        withCredentials: true,
      });

      if (response.status === 200) {
        toast.success('Sign-in successful!');
        
        // You can add code here to redirect or update state based on successful login
      }
    } catch (error) {
      toast.error('Sign-in failed. Please check your credentials.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="container mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h2 className="text-2xl font-bold mb-4">Seller Sign In</h2>
      <form onSubmit={handleSubmit}>
        {/* Email */}
        <div className="mb-4">
          <label className="block text-sm font-semibold mb-2">Email</label>
          <input
            type="email"
            name="email"
            value={sellerData.email}
            onChange={handleChange}
            className="w-full px-3 py-2 border rounded-md"
            required
          />
        </div>
        {/* Password */}
        <div className="mb-4">
          <label className="block text-sm font-semibold mb-2">Password</label>
          <input
            type="password"
            name="password"
            value={sellerData.password}
            onChange={handleChange}
            className="w-full px-3 py-2 border rounded-md"
            required
          />
        </div>
        {/* Store Name */}
        <div className="mb-4">
          <label className="block text-sm font-semibold mb-2">Store Name</label>
          <input
            type="text"
            name="storeName"
            value={sellerData.storeName}
            onChange={handleChange}
            className="w-full px-3 py-2 border rounded-md"
            required
          />
        </div>

        <button
          type="submit"
          className={`w-full py-2 px-4 bg-green-600 text-white font-semibold rounded-md ${isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-green-700'}`}
          disabled={isLoading}
        >
          {isLoading ? 'Signing In...' : 'Sign In'}
        </button>
      </form>
    </div>
  );
};

export default SellerSignIn;
